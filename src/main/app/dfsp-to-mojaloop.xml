<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <flow name="get:/health">
        <http:listener config-ref="dfsp-scheme-adapter-httpListenerConfig" path="${dfsp-scheme-adapter.basepath}/health"
                       doc:name="HTTP"/>
        <set-payload value="{ &quot;status&quot; : &quot;ok&quot; }"
                     doc:name="Set Payload" mimeType="application/json"/>
        <exception-strategy ref="interop-catch-exception-strategy"
                            doc:name="Reference Exception Strategy"/>
    </flow>

    <flow name="post:/commands/register">
        <http:listener config-ref="dfsp-scheme-adapter-httpListenerConfig" path="/directory/v1/commads/register"
                       doc:name="HTTP"/>
        <logger level="INFO"
                message="Sending Request to GET http://${MOJALOOP_HOST}:${MOJALOOP_PORT}${mojaloop.basepath}/fsp"
                category="com.pdp.interop.switch.get-parties-type-id" doc:name="logger"/>
        <http:request config-ref="mojaloop-http-config"
                      path="/fsp" method="POST" doc:name="Add FSP">
            <http:success-status-code-validator values="200..599"/>
        </http:request>
        <set-property propertyName="http.status" value="#[message.inboundProperties.'http.status']"
                      doc:name="Property"/>
        <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
        <logger level="INFO"
                message="Response from /commands/register Response: #[message.payloadAs(java.lang.String)]"
                category="com.mojaloop.interop.dfsp.directory.resgister" doc:name="logger"/>
        <exception-strategy ref="interop-catch-exception-strategy" doc:name="Reference Exception Strategy"/>
    </flow>

    <flow name="post:/resources">
        <http:listener config-ref="dfsp-scheme-adapter-httpListenerConfig" path="/directory/v1/resources" allowedMethods="POST"
                       doc:name="HTTP"/>
        <object-to-string-transformer/>
        <expression-component doc:name="Get Participant">
            <![CDATA[flowVars.retMap = app.registry.utils.createAddParticipantRequest(payload,message.inboundProperties.authorization)]]></expression-component>

        <set-variable variableName="correlationId" value="#[function:uuid] "/>
        <set-payload value="#[flowVars.retMap.addParticipantsRequest]"/>
        <logger level="INFO"
                message="Sending request to POST http://${MOJALOOP_HOST}:${MOJALOOP_PORT}${mojaloop.basepath}/participants/#[flowVars.retMap.identifierType]/#[flowVars.retMap.identifier] method:post payload: #[message.payloadAs(java.lang.String)] CorrelationId: #[flowVars.correlationId]"
                category="com.mojaloop.interop.dfsp.scheme.adapter" doc:name="logger"/>
        <http:request config-ref="mojaloop-http-config"
                      path="/participants/#[flowVars.retMap.identifierType]/#[flowVars.retMap.identifier]" method="POST"
                      doc:name="Call account-lookup /participants">
            <http:request-builder>
                <http:header headerName="FSPIOP-Source" value="#[flowVars.retMap.dfspName]"/>
                <http:header headerName="X-Forwarded-For" value="#[flowVars.correlationId]"/>
            </http:request-builder>
            <http:success-status-code-validator values="200..599"/>
        </http:request>
        <set-payload value="#[flowVars.retMap.resourceResponse]"/>
        <!--<expression-component doc:name="Get Participant">-->
        <!--<![CDATA[payload = app.registry.syncAsyncMappingStore.getParticipant(flowVars.correlationId.trim())]]></expression-component>-->
    </flow>

    <flow name="get:/resources:central-directory-api-config">
        <http:listener config-ref="dfsp-scheme-adapter-httpListenerConfig" path="/directory/v1/resources" allowedMethods="GET"
                       doc:name="HTTP"/>
        <object-to-string-transformer/>
        <expression-component doc:name="Get Participant">
            <![CDATA[flowVars.dfspName = app.registry.utils.getDFSPName(message.inboundProperties.authorization)]]></expression-component>
        <set-variable variableName="partyId"
                      value="#[message.inboundProperties.'http.query.params'.identifier.substring(4)]"
                      doc:name="Save identifier"/>
        <set-variable variableName="correlationId" value="#[function:uuid] "/>
        <logger level="INFO"
                message="Sending request to GET http://${MOJALOOP_HOST}:${MOJALOOP_PORT}${mojaloop.basepath}/parties/MSISDN/#[flowVars.partyId]"
                category="com.mojaloop.interop.dfsp.scheme.adapter" doc:name="logger"/>
        <http:request config-ref="mojaloop-http-config"
                      path="/parties/MSISDN/#[flowVars.partyId]" method="GET" doc:name="Call switch /parties">
            <http:request-builder>
                <http:header headerName="FSPIOP-Source"
                             value="#[flowVars.dfspName]"/>
                <http:header headerName="X-Forwarded-For" value="#[flowVars.correlationId]"/>
                <http:header headerName="X-Correlation-Id" value="#[flowVars.correlationId]"/>
            </http:request-builder>
            <http:success-status-code-validator values="200..599"/>
        </http:request>

        <expression-component doc:name="Get Participant">
            <![CDATA[Thread.sleep(2000)]]></expression-component>
        <expression-component doc:name="Get Participant">
            <![CDATA[flowVars.payeeDetails = app.registry.syncAsyncMappingStore.getParticipant(flowVars.correlationId.trim())]]></expression-component>
        <expression-component doc:name="Generate response">
            <![CDATA[payload = app.registry.utils.createDFSPGetResourcesResponse(flowVars.payeeDetails,flowVars.dfspName,'${DFSP_HOST}','8014')]]></expression-component>
        <logger level="INFO"
                message="Sending response to dfsp GET /resources: #[payload]"
                category="com.mojaloop.interop.dfsp.scheme.adapter" doc:name="logger"/>
    </flow>

    <flow name="POST:/quotes:central-directory-api-config">
        <http:listener config-ref="dfsp-scheme-adapter-httpListenerConfig" path="/scheme/adapter/v1/quotes" allowedMethods="POST"
                       doc:name="HTTP"/>
        <object-to-string-transformer/>
        <logger level="INFO"
                message="Received DFSP Quote Request: #[payload]"
                category="com.mojaloop.interop.dfsp.scheme.adapter" doc:name="logger"/>
        <set-variable variableName="dfspQuoteRequest" value="#[payload]"/>
        <set-variable variableName="correlationId" value="#[function:uuid] "/>
        <expression-component doc:name="Generate DFSP Quotes Request">
            <![CDATA[import io.restassured.path.json.JsonPath;
                flowVars.paymentId = JsonPath.from(payload).getString("paymentId");
                flowVars.payeeId = JsonPath.from(payload).getString("payee.identifier");
                ]]></expression-component>
        <set-variable variableName="payerFspId"
                      value="#['${DFSP_ENVIRONMENT}'.substring(0,'${DFSP_ENVIRONMENT}'.indexOf('-'))]"/>
        <!-- TODO Replace the below logic with call to account lookup-->
        <set-variable variableName="payeeFspId"
                      value="dfsp2"/>
        <!--<flow-ref name="getPayeeFspId"/>-->
        <expression-component doc:name="Get Quote">
            <![CDATA[payload = app.registry.utils.createMojaloopQuotesRequest(flowVars.dfspQuoteRequest,flowVars.payerFspId,flowVars.payeeFspId)]]></expression-component>
        <logger level="INFO"
                message="Sending request to POST http://${MOJALOOP_HOST}:${MOJALOOP_PORT}${mojaloop.basepath}/quotes Payload: #[payload] FSPIOP-Source:#[flowVars.dfsp]"
                category="com.mojaloop.interop.dfsp.scheme.adapter" doc:name="logger"/>
        <http:request config-ref="mojaloop-http-config"
                      path="/quotes" method="POST" doc:name="Call switch /quotes">
            <http:request-builder>
                <http:header headerName="FSPIOP-Source"
                             value="#[flowVars.payerFspId]"/>
                <http:header headerName="FSPIOP-Destination"
                             value="#[flowVars.payeeFspId]"/>
                <http:header headerName="X-Forwarded-For" value="#[flowVars.correlationId]"/>
            </http:request-builder>
            <http:success-status-code-validator values="200..599"/>
        </http:request>
        <expression-component doc:name="Wait">
            <![CDATA[Thread.sleep(2000)]]></expression-component>
        <!--<expression-component doc:name="Get Quote Response">-->
            <!--<![CDATA[flowVars.quoteResponse = app.registry.syncAsyncMappingStore.getQuote(flowVars.correlationId.trim())]]></expression-component>-->
        <expression-component doc:name="Get Quote Response">
            <![CDATA[flowVars.quoteResponse = app.registry.syncAsyncMappingStore.getQuote(flowVars.paymentId.trim())]]></expression-component>
        <logger level="INFO" message="ML Quote Response:#[flowVars.quoteResponse]"
                category="com.mojaloop.interop.dfsp.scheme.adapter" doc:name="logger"/>
        <expression-component doc:name="Send Quote Response">
            <![CDATA[payload = app.registry.utils.createDFSPQuotesResponse(flowVars.quoteResponse,flowVars.paymentId,flowVars.payerFspId,'${DFSP_HOST}')]]></expression-component>
        <logger level="INFO" message="Sending DFSP Quote Response:#[payload]"
                category="com.mojaloop.interop.dfsp.scheme.adapter" doc:name="logger"/>
    </flow>

    <sub-flow name="getPayeeFspId">
        <set-variable variableName="payeeFspIdCorrelationId" value="#[function:uuid] "/>
        <logger level="INFO"
                message="Sending request to GET http://${MOJALOOP_HOST}:${MOJALOOP_PORT}${mojaloop.basepath}/participants/MSISDN/#[flowVars.payeeId]"
                category="com.mojaloop.interop.dfsp.scheme.adapter" doc:name="logger"/>
        <http:request config-ref="mojaloop-http-config"
                      path="/participants/MSISDN/#[flowVars.payeeId]" method="GET" doc:name="Call switch /participants">
            <http:request-builder>
                <http:header headerName="FSPIOP-Source"
                             value="#[flowVars.payerFspId]"/>
                <http:header headerName="X-Forwarded-For" value="#[flowVars.payeeFspIdCorrelationId]"/>
            </http:request-builder>
            <http:success-status-code-validator values="200..599"/>
        </http:request>

        <expression-component doc:name="Wait">
            <![CDATA[Thread.sleep(1000)]]></expression-component>
        <expression-component doc:name="Get Participant">
            <![CDATA[flowVars.payeeFspDetails = app.registry.syncAsyncMappingStore.getParticipant(flowVars.payeeFspIdCorrelationId.trim())]]></expression-component>
        <expression-component doc:name="Generate DFSP Quotes Request">
            <![CDATA[import io.restassured.path.json.JsonPath;
                flowVars.payeeFspId = JsonPath.from(flowVars.payeeFspDetails).getString("fspId");]]></expression-component>
    </sub-flow>

    <flow name="PUT:/payments:central-directory-api-config">
        <http:listener config-ref="dfsp-scheme-adapter-httpListenerConfig" path="/scheme/adapter/v1/payments" allowedMethods="PUT"
                       doc:name="HTTP"/>
        <object-to-string-transformer/>
        <logger level="INFO"
                message="Received DFSP Payment Request: #[payload]"
                category="com.mojaloop.interop.dfsp.scheme.adapter" doc:name="logger"/>
        <set-variable variableName="dfspRequest" value="#[payload]"/>
        <set-variable variableName="correlationId" value="#[function:uuid] "/>
        <expression-component doc:name="Send Quote Response">
            <![CDATA[flowVars.retMap = app.registry.utils.createDFSPPayerPrepareTransferRequest(payload,'${DFSP_HOST}')]]></expression-component>
        <set-variable variableName="paymentId" value="#[flowVars.retMap.paymentId]"/>
        <set-payload value="#[flowVars.retMap.prepareRequest]"/>
        <logger level="INFO"
                message="Proxying request to http://${DFSP_HOST}:${DFSP_LEDGER_PORT}${dfsp-ledger.basePath}/transfers/#[flowVars.retMap.paymentId], method=put payload: #[payload]"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <http:request config-ref="dfsp-ledger-http-config" path="/transfers/#[flowVars.retMap.paymentId]"
                      method="PUT" doc:name="HTTP">
            <http:success-status-code-validator values="200..500"/>
        </http:request>
        <object-to-string-transformer/>
        <logger level="INFO" message="Prepare Transfer response from DFSP: #[payload]" category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <expression-component doc:name="Send Quote Response">
            <![CDATA[flowVars.retMap = app.registry.utils.createMojaloopPrepareTransferRequest(flowVars.dfspRequest)]]></expression-component>
        <set-payload value="#[flowVars.retMap.mlPrepareRequest]"/>
        <expression-component doc:name="dateHeader"><![CDATA[#[ flowVars.dateHeader = server.dateTime.format('EEE, d MMM yyyy HH:mm:ss z').toString() ]]]></expression-component>
        <logger level="INFO"
                message="Sending request to POST http://${MOJALOOP_HOST}:${MOJALOOP_PORT}${mojaloop.basepath}/transfers Payload: #[payload] FSPIOP-Source:#[flowVars.retMap.payerFspId] FSPIOP-Destination:#[flowVars.retMap.payeeFspId]"
                category="com.mojaloop.interop.dfsp.scheme.adapter" doc:name="logger"/>
        <http:request config-ref="mojaloop-http-config"
                      path="/transfers" method="POST" doc:name="Call switch /quotes">
            <http:request-builder>
                <http:header headerName="FSPIOP-Source"
                             value="#[flowVars.retMap.payerFspId]"/>
                <http:header headerName="FSPIOP-Destination"
                             value="#[flowVars.retMap.payeeFspId]"/>
                <http:header headerName="Date" value="#[flowVars.dateHeader]"/>
                <http:header headerName="X-Forwarded-For" value="#[flowVars.correlationId]"/>
            </http:request-builder>
            <http:success-status-code-validator values="200..599"/>
        </http:request>
        <expression-component doc:name="Wait">
            <![CDATA[Thread.sleep(4000)]]></expression-component>
        <!--<expression-component doc:name="Get Payment Fulfill Response">-->
            <!--<![CDATA[flowVars.paymentFulfillResponse = app.registry.syncAsyncMappingStore.getPaymentFulfillResponse(flowVars.correlationId.trim())]]></expression-component>-->
        <expression-component doc:name="Get Payment Fulfill Response">
            <![CDATA[flowVars.paymentFulfillResponse = app.registry.syncAsyncMappingStore.getPaymentFulfillResponse(flowVars.paymentId.trim())]]></expression-component>
        <logger level="INFO" message="ML Payment Fulfill Response:#[flowVars.paymentFulfillResponse]"
                category="com.mojaloop.interop.dfsp.scheme.adapter" doc:name="logger"/>

        <!--   Call DFSP Fulfill Transfer-->
        <expression-component doc:name="Get Data from Transfer Request">
            <![CDATA[payload = app.registry.utils.createPayerDFSPFulfillTransferRequest(flowVars.paymentFulfillResponse)]]></expression-component>
        <set-variable variableName="fulfillment" value="#[payload]"/>
        <set-property propertyName="Content-Type" value="text/plain" doc:name="Property"/>
        <logger level="INFO"
                message="Proxying request to http://${DFSP_HOST}:${DFSP_LEDGER_PORT}${dfsp-ledger.basePath}/transfers/#[flowVars.paymentId]/fulfillment, method=put payload: #[payload]"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <http:request config-ref="dfsp-ledger-http-config" path="/transfers/#[flowVars.paymentId]/fulfillment"
                      method="PUT" doc:name="HTTP">
            <http:success-status-code-validator values="200..500"/>
        </http:request>
        <object-to-string-transformer/>
        <logger level="INFO"
                message="Fulfill Transfer response from DFSP: #[payload]"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>

        <!-- Send response back to DFSP -->
        <expression-component doc:name="Get Data from Transfer Request">
            <![CDATA[payload = app.registry.utils.createPayerDFSPFulfillTransferResponse(flowVars.paymentId,flowVars.dfspRequest,flowVars.fulfillment)]]></expression-component>


    </flow>

    <catch-exception-strategy name="interop-catch-exception-strategy">
        <set-property propertyName="Content-Type" value="application/json"
                      doc:name="Property - content-type"/>
        <set-property propertyName="http.status" value="501"
                      doc:name="Property - http status"/>
        <set-session-variable variableName="errorMessageId"
                              value="Transformer Messaging Exception" doc:name="set-errorMessageId"/>
        <!--<transformer ref="ExceptionTransformer" doc:name="Exception Transformer"/>-->
    </catch-exception-strategy>

</mule>
