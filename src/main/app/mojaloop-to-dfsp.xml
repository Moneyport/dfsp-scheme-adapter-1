<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:json="http://www.mulesoft.org/schema/mule/json"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <apikit:config name="mojaloop-config" raml="mojaloop.raml" consoleEnabled="false" doc:name="Router"/>

    <flow name="mojaloop-main">
        <http:listener config-ref="dfsp-scheme-adapter-httpsListenerConfig" path="/scheme/adapter/ml-dfsp/v1/*" doc:name="HTTP"/>
        <logger level="INFO"
                message="Received request at method=#[message.inboundProperties.'http.method'], url=http://#[message.inboundProperties.'host'+message.inboundProperties.'http.request.path'], Payload=#[message.payloadAs(java.lang.String)]; Headers :: FSPIOP-Source: #[message.inboundProperties.'FSPIOP-Source'], FSPIOP-Destination: #[message.inboundProperties.'FSPIOP-Destination'], Accept: #[message.inboundProperties.'Accept'], Date: #[message.inboundProperties.'Date'], Content-Type: #[message.inboundProperties.'Content-Type']"
                category="com.l1p.interop.routing" doc:name="logger"/>
        <component class="com.mojaloop.interop.OverideInboundProperties" doc:name="OverideInboundProperties"/>
        <apikit:router config-ref="mojaloop-config" doc:name="APIkit Router"/>
        <exception-strategy ref="apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>

    <flow name="put:/authorizations/{ID}:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/parties/{Type}/{ID}/{SubId}/error:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/participants/{ID}/error:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/bulkTransfers/{ID}/error:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/quotes/{ID}/error:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/transactionRequests/{ID}/error:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/transfers/{ID}/error:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/transactions/{ID}/error:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/bulkQuotes/{ID}/error:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/participants/{Type}/{ID}/{SubId}/error:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/authorizations/{ID}/error:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/parties/{Type}/{ID}/error:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/participants/{Type}/{ID}/error:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/parties/{Type}/{ID}:application/json:mojaloop-config">
        <set-variable variableName="correlationId" value="#[message.inboundProperties.'X-Forwarded-For']" doc:name="Variable"/>
        <object-to-string-transformer doc:name="Object to String"/>
        <expression-component doc:name="Post Participant">
            <![CDATA[app.registry.syncAsyncMappingStore.addParticipant(flowVars.correlationId.trim(),payload)]]></expression-component>
    </flow>
    <flow name="put:/transactions/{ID}:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/bulkQuotes/{ID}:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/transfers/{ID}:application/json:mojaloop-config">
        <set-variable variableName="correlationId" value="#[message.inboundProperties.'X-Forwarded-For']" doc:name="Variable"/>
        <object-to-string-transformer doc:name="Object to String"/>
        <expression-component doc:name="PUT  Quote">
            <![CDATA[app.registry.syncAsyncMappingStore.addPaymentFulfillResponse(flowVars.correlationId.trim(),payload)]]></expression-component>
    </flow>
    <flow name="put:/quotes/{ID}:application/json:mojaloop-config">
        <set-variable variableName="correlationId" value="#[message.inboundProperties.'X-Forwarded-For']" doc:name="Variable"/>
        <object-to-string-transformer doc:name="Object to String"/>
        <expression-component doc:name="PUT  Quote">
            <![CDATA[app.registry.syncAsyncMappingStore.addQuote(flowVars.correlationId.trim(),payload)]]></expression-component>
    </flow>
    <flow name="put:/bulkTransfers/{ID}:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/transactionRequests/{ID}:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/participants/{ID}:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/parties/{Type}/{ID}/{SubId}:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/participants/{Type}/{ID}/{SubId}:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="put:/participants/{Type}/{ID}:application/json:mojaloop-config">
        <set-variable variableName="correlationId" value="#[message.inboundProperties.'X-Forwarded-For']" doc:name="Variable"/>
        <object-to-string-transformer doc:name="Object to String"/>
        <expression-component doc:name="Post Participant">
            <![CDATA[app.registry.syncAsyncMappingStore.addParticipant(flowVars.correlationId.trim(),payload)]]></expression-component>
    </flow>
    <flow name="delete:/participants/{Type}/{ID}/{SubId}:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="delete:/participants/{Type}/{ID}:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/authorizations/{ID}:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/parties/{Type}/{ID}:mojaloop-config">
        <logger level="INFO"
                message="X-Source-Id: #[message.inboundProperties.'FSPIOP-Source'] X-Dest-Id: #[message.inboundProperties.'FSPIOP-Destination']"
                category="com.pdp.interop.mockfsp" doc:name="logger"/>
        <set-property propertyName="Type" value="#[message.inboundProperties.'http.uri.params'.Type]" doc:name="Property"/>
        <set-property propertyName="ID" value="#[message.inboundProperties.'http.uri.params'.ID]" doc:name="Property"/>
        <flow-ref name="populate-outbound-properties" doc:name="Flow Reference"/>
        <set-payload value="trigger" doc:name="Set Payload"/>
        <vm:outbound-endpoint exchange-pattern="one-way" path="GetParty" doc:name="VM"/>
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
        <set-property propertyName="http.status" value="202" doc:name="Property"/>
    </flow>
    <flow name="dequeue-get:/parties/{Type}/{ID}:mojaloop-config">
        <vm:inbound-endpoint exchange-pattern="one-way" address="vm://GetParty" doc:name="VM"/>
        <flow-ref name="populate-outbound-properties" doc:name="Flow Reference"/>
        <set-variable variableName="receiverType" value="#[message.inboundProperties.Type]"
                      doc:name="Variable"/>
        <set-variable variableName="receiverId" value="#[message.inboundProperties.ID]"
                      doc:name="Variable"/>

        <!-- Storing headers as flow variables as the call to dfsp overides required headers-->
        <set-variable variableName="FSPIOP-Source" value="#[message.inboundProperties.'FSPIOP-Source']" doc:name="Variable"/>
        <set-variable variableName="FSPIOP-Destination" value="#[message.inboundProperties.'FSPIOP-Destination']" doc:name="Variable"/>
        <set-variable variableName="X-Forwarded-For" value="#[message.inboundProperties.'X-Forwarded-For']" doc:name="Variable"/>
        <set-variable variableName="dfsp-api.auth_value" value="#[Base64.getEncoder().encodeToString(&quot;${DFSP_ENVIRONMENT}:${DFSP_ENVIRONMENT}&quot;.getBytes(&quot;utf-8&quot;))]" doc:name="dfsp-auth"/>

        
        <!-- Making call to DFSP to get the party/receiver information-->
        <logger level="INFO"
                message="Sending request for GET on http://${DFSP_HOST}:${DFSP_API_PORT}/receivers/#[message.inboundProperties.ID], Authorization=#['Basic ']${dfsp-api.auth_value}"
                category="com.l1p.interop.scheme.adapter.fetch-payee" doc:name="logger"/>
        <http:request config-ref="dfsp-api-http-config" path="/receivers/#[message.inboundProperties.ID]"
                      method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Authorization" value="#['Basic ']#[flowVars.'dfsp-api.auth_value']"/>
                <!--<http:header headerName="Authorization" value="#['Basic ']${dfsp-api.auth_value}"/>-->
            </http:request-builder>
            <http:success-status-code-validator values="200,400"/>
        </http:request>
        <object-to-string-transformer mimeType="application/json" doc:name="Object to String"/>
        <logger level="INFO"
                message="Response from dfsp: #[payload]"
                category="com.pdp.interop.switch" doc:name="logger"/>

        <!-- Making Callback to Mojaloop-->
        <expression-component doc:name="Get Participant">
            <![CDATA[payload = app.registry.utils.createMojaloopPartiesResponse(payload,flowVars.receiverId)]]></expression-component>
        <set-property propertyName="FSPIOP-Source" value="#[flowVars.'FSPIOP-Destination']" doc:name="Property"/>
        <set-property propertyName="FSPIOP-Destination" value="#[flowVars.'FSPIOP-Source']" doc:name="Property"/>
        <set-property propertyName="X-Forwarded-For" value="#[flowVars.'X-Forwarded-For']" doc:name="Property"/>

        <object-to-string-transformer mimeType="application/json" doc:name="Object to String"/>
        <logger level="INFO"
                message="Sending Request to PUT http://${MOJALOOP_HOST}:${MOJALOOP_PORT}${mojaloop.basepath}/parties/#[flowVars.receiverType]/#[flowVars.receiverId] Payload: #[payload]"
                category="com.pdp.interop.switch" doc:name="logger"/>
        <http:request config-ref="mojaloop-http-config"
                      path="/parties/#[flowVars.receiverType]/#[flowVars.receiverId]"
                      method="PUT" doc:name="HTTP">
            <http:success-status-code-validator values="200..599"/>
        </http:request>
    </flow>

    <flow name="get:/transactions/{ID}:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/transfers/{ID}:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/quotes/{ID}:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/bulkQuotes/{ID}:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/bulkTransfers/{ID}:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/transactionRequests/{ID}:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/participants/{Type}/{ID}/{SubId}:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/parties/{Type}/{ID}/{SubId}:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/participants/{Type}/{ID}:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="post:/bulkQuotes:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="post:/bulkTransfers:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="post:/fsp:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="post:/participants:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="post:/parties/{Type}/{ID}:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="post:/quotes:application/json:mojaloop-config">
        <flow-ref name="populate-outbound-properties" doc:name="Flow Reference"/>
        <vm:outbound-endpoint exchange-pattern="one-way" path="PostQuotes" doc:name="VM"/>
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
        <set-property propertyName="http.status" value="202" doc:name="Property"/>
    </flow>
    <flow name="dequeue-post:/quotes:application/json:mock-fsp-config">
        <vm:inbound-endpoint exchange-pattern="one-way" address="vm://PostQuotes" doc:name="VM"/>
        <object-to-string-transformer mimeType="application/json" doc:name="Object to String"/>
        <flow-ref name="populate-outbound-properties" doc:name="Flow Reference"/>

        <!-- Storing headers as flow variables as the call to dfsp overides required headers-->
        <set-variable variableName="FSPIOP-Source" value="#[message.inboundProperties.'FSPIOP-Source']" doc:name="Variable"/>
        <set-variable variableName="FSPIOP-Destination" value="#[message.inboundProperties.'FSPIOP-Destination']" doc:name="Variable"/>
        <set-variable variableName="X-Forwarded-For" value="#[message.inboundProperties.'X-Forwarded-For']" doc:name="Variable"/>

        <set-variable variableName="originalMojaloopQuotesRequest" value="#[payload]" doc:name="Variable"/>
        <set-variable variableName="dfsp-api.auth_value" value="#[Base64.getEncoder().encodeToString(&quot;${DFSP_ENVIRONMENT}:${DFSP_ENVIRONMENT}&quot;.getBytes(&quot;utf-8&quot;))]" doc:name="dfsp-auth"/>

        <logger message="In dequeue-post /quotes: #[payload] " level="INFO" category="com.pdp.interop.mockfsp"
                doc:name="Logger"/>
        <!-- Making call to DFSP for Quotes-->
        <!--<expression-component doc:name="Generate DFSP Quotes Request">-->
            <!--<![CDATA[import com.jayway.jsonpath.JsonPath;-->
                <!--flowVars.quoteId = JsonPath.parse(payload).read('quoteId').toString();]]></expression-component>-->
        <expression-component doc:name="Generate DFSP Quotes Request">
            <![CDATA[import io.restassured.path.json.JsonPath;
                flowVars.quoteId = JsonPath.from(payload).getString('quoteId');]]></expression-component>
        <expression-component doc:name="Generate DFSP Quotes Request">
            <![CDATA[payload = app.registry.utils.createDFSPQuotesRequest(payload)]]></expression-component>
        <logger level="INFO"
                message="Posting request to Payee: http://${DFSP_HOST}:${DFSP_API_PORT}/quotes, method=post Payload: #[payload]"
                category="com.l1p.interop.scheme.adapter.quote" doc:name="logger"/>
        <http:request config-ref="dfsp-api-http-config" path="/quotes" method="POST"
                      doc:name="Call dfsp-api /quotes">
            <http:request-builder>
                <http:header headerName="Authorization" value="#['Basic ']#[flowVars.'dfsp-api.auth_value']"/>
            </http:request-builder>
            <http:success-status-code-validator values="200..599"/>
        </http:request>
        <object-to-string-transformer mimeType="application/json" doc:name="Object to String"/>

        <logger level="INFO"
                message="Response from DFSP /quotes: #[payload]"
                category="com.l1p.interop.scheme.adapter.quote" doc:name="logger"/>

        <!-- Making PUT callback to Mojaloop -->
        <expression-component doc:name="Create Mojaloop Response">
            <![CDATA[payload = app.registry.utils.createMojaloopQuotesResponse(payload,flowVars.originalMojaloopQuotesRequest)]]></expression-component>
        <set-property propertyName="FSPIOP-Source" value="#[flowVars.'FSPIOP-Destination']" doc:name="Property"/>
        <set-property propertyName="FSPIOP-Destination" value="#[flowVars.'FSPIOP-Source']" doc:name="Property"/>
        <set-property propertyName="X-Forwarded-For" value="#[flowVars.'X-Forwarded-For']" doc:name="Property"/>
        <object-to-string-transformer mimeType="application/json" doc:name="Object to String"/>
        <logger level="INFO"
                message="Sending Request to PUT http://${MOJALOOP_HOST}:${MOJALOOP_PORT}${mojaloop.basepath}/quotes/#[flowVars.quoteId] Payload: #[payload]"
                category="com.pdp.interop.switch" doc:name="logger"/>
        <http:request config-ref="mojaloop-http-config"
                      path="/quotes/#[flowVars.quoteId]"
                      method="PUT" doc:name="HTTP">
            <http:success-status-code-validator values="200..599"/>
        </http:request>
    </flow>
    <flow name="post:/transactionRequests:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="post:/transfers:application/json:mojaloop-config">
        <object-to-string-transformer doc:name="Object to String"/>
        <flow-ref name="populate-outbound-properties" doc:name="Flow Reference"/>
        <vm:outbound-endpoint exchange-pattern="one-way" path="PostTransfers" doc:name="VM"/>
        <set-property value="202" propertyName="http.status" doc:name="Property"/>
    </flow>
    <flow name="dequeue-post:/transfers:application/json:mojaloop-config">
        <vm:inbound-endpoint exchange-pattern="one-way" address="vm://PostTransfers" doc:name="VM"/>
        <!--<flow-ref name="populate-outbound-properties"/>-->
        <object-to-string-transformer doc:name="Object to String"/>
        <!-- Storing headers as flow variables as the call to dfsp overides required headers-->
        <set-variable variableName="FSPIOP-Source" value="#[message.inboundProperties.'FSPIOP-Source']" doc:name="Variable"/>
        <set-variable variableName="X-Source-Identifier" value="#[message.inboundProperties.'X-Source-Identifier']" doc:name="Variable"/>
        <set-variable variableName="FSPIOP-Destination" value="#[message.inboundProperties.'FSPIOP-Destination']" doc:name="Variable"/>
        <set-variable variableName="X-Destination-Identifier" value="#[message.inboundProperties.'X-Destination-Identifier']" doc:name="Variable"/>
        <set-variable variableName="X-Forwarded-For" value="#[message.inboundProperties.'X-Forwarded-For']" doc:name="Variable"/>
        <set-variable variableName="dfsp-api.auth_value" value="#[Base64.getEncoder().encodeToString(&quot;${DFSP_ENVIRONMENT}:${DFSP_ENVIRONMENT}&quot;.getBytes(&quot;utf-8&quot;))]" doc:name="dfsp-auth"/>

        <set-variable variableName="originalMojaloopTransferRequest" value="#[payload]" doc:name="Variable"/>
        <expression-component doc:name="Get Data from Transfer Request">
            <![CDATA[flowVars.transferMap = app.registry.utils.extractDataFromMojaloopTransferRequest(payload)]]></expression-component>
        <set-variable variableName="transferId" value="#[flowVars.transferMap.transferId]" doc:name="Variable"/>

        <!-- Call dfsp-api for payee id to extract account details-->
        <logger level="INFO"
                message="Sending request for GET on http://${DFSP_HOST}:${DFSP_API_PORT}/receivers/#[flowVars.transferMap.payeeId]"
                category="com.l1p.interop.scheme.adapter.fetch-payee" doc:name="logger"/>
        <http:request config-ref="dfsp-api-http-config" path="/receivers/#[flowVars.transferMap.payeeId]"
                      method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:header headerName="Authorization" value="#['Basic ']#[flowVars.'dfsp-api.auth_value']"/>
            </http:request-builder>
            <http:success-status-code-validator values="200,400"/>
        </http:request>
        <object-to-string-transformer mimeType="application/json" doc:name="Object to String"/>
        <logger level="INFO"
                message="Response from DFSP for payeeId #[flowVars.transferMap.payeeId]: #[payload]"
                category="com.pdp.interop.switch" doc:name="logger"/>
        <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
        <set-variable variableName="payeeAccount" value="#[payload.account]" doc:name="Variable"/>

        <!--   Call DFSP Prepare Transfer-->
        <expression-component doc:name="Get Prepare Transfer Request">
            <![CDATA[payload = app.registry.utils.createDFSPPrepareTransferRequest(flowVars.originalMojaloopTransferRequest, flowVars.payeeAccount, "${DFSP_HOST}", "${DFSP_LEDGER_PORT}","${dfsp-payee-connector.name}")]]></expression-component>
        <logger level="INFO"
                message="Proxying request to http://${DFSP_HOST}:${DFSP_LEDGER_PORT}${dfsp-ledger.basePath}/transfers/#[flowVars.transferId], method=put payload: #[payload]"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <http:request config-ref="dfsp-ledger-http-config" path="/transfers/#[flowVars.transferId]"
                      method="PUT" doc:name="HTTP">
            <http:success-status-code-validator values="200..500"/>
        </http:request>
        <object-to-string-transformer doc:name="Object to String"/>
        <logger level="INFO"
                message="Prepare Transfer response from DFSP: #[payload]"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>

        <!--   Call DFSP Fulfill Transfer-->
        <expression-component doc:name="Get Data from Transfer Request">
            <![CDATA[payload = app.registry.utils.createDFSPFulfillTransferRequest(flowVars.originalMojaloopTransferRequest)]]></expression-component>
        <set-property propertyName="Content-Type" value="text/plain" doc:name="Property"/>
        <logger level="INFO"
                message="Proxying request to http://${DFSP_HOST}:${DFSP_LEDGER_PORT}${dfsp-ledger.basePath}/transfers/#[flowVars.transferId]/fulfillment, method=put payload: #[payload]"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>
        <http:request config-ref="dfsp-ledger-http-config" path="/transfers/#[flowVars.transferId]/fulfillment"
                      method="PUT" doc:name="HTTP">
            <http:success-status-code-validator values="200..500"/>
        </http:request>
        <object-to-string-transformer doc:name="Object to String"/>
        <logger level="INFO"
                message="Fulfill Transfer response from DFSP: #[payload]"
                category="com.l1p.interop.ilp.ledger.api-main" doc:name="logger"/>

        <!-- Call Mojaloop Callback PUT for Fulfill Transfer-->
        <expression-component doc:name="Get Data from Transfer Request">
            <![CDATA[payload = app.registry.utils.createMojaloopFulfillTransferResponse(flowVars.originalMojaloopTransferRequest)]]></expression-component>
        <set-property propertyName="FSPIOP-Source" value="#[flowVars.'FSPIOP-Destination']" doc:name="Property"/>
        <set-property propertyName="X-Source-Identifier" value="#[flowVars.'X-Destination-Identifier']" doc:name="Property"/>
        <set-property propertyName="FSPIOP-Destination" value="#[flowVars.'FSPIOP-Source']" doc:name="Property"/>
        <set-property propertyName="X-Destination-Identifier" value="#[flowVars.'X-Source-Identifier']" doc:name="Property"/>
        <set-property propertyName="X-Forwarded-For" value="#[flowVars.'X-Forwarded-For']" doc:name="Property"/>
        <object-to-string-transformer mimeType="application/json" doc:name="Object to String"/>
        <logger level="INFO"
                message="Sending Request to PUT http://${MOJALOOP_HOST}:${MOJALOOP_PORT}${mojaloop.basepath}/transfers/#[flowVars.transferId] Payload: #[payload]"
                category="com.pdp.interop.switch" doc:name="logger"/>
        <http:request config-ref="mojaloop-http-config"
                      path="/transfers/#[flowVars.transferId]"
                      method="PUT" doc:name="HTTP">
            <http:success-status-code-validator values="200..599"/>
        </http:request>

    </flow>
    <flow name="post:/participants/{Type}/{ID}/{SubId}:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <flow name="post:/participants/{Type}/{ID}:application/json:mojaloop-config">
        <set-payload value="#[NullPayload.getInstance()]" doc:name="Set Payload"/>
    </flow>
    <sub-flow name="populate-outbound-properties">
        <!-- Populate out-bound properties based on in-bound headers -->
        <!-- <expression-component doc:name="Set-Accept"><![CDATA[if( message.inboundProperties.Accept != null )
	message.outboundProperties['Accept'] = message.inboundProperties.Accept;]]></expression-component> -->
        <expression-component doc:name="Set-Date"><![CDATA[if( message.inboundProperties.Date != null )
	message.outboundProperties['Date'] = message.inboundProperties.Date;]]></expression-component>
        <!-- <expression-component doc:name="Set-Content-Length"><![CDATA[if( message.inboundProperties.'Content-Length' != null )
	message.outboundProperties['Content-Length'] = message.inboundProperties.'Content-Length';]]></expression-component> -->
        <expression-component doc:name="Set-Content-Type"><![CDATA[if( message.inboundProperties.'Content-Type' != null )
	message.outboundProperties['Content-Type'] = "application/json";]]></expression-component>
        <expression-component doc:name="Set-FSPIOP-Source"><![CDATA[if( message.inboundProperties.'FSPIOP-Source' != null )
	message.outboundProperties['FSPIOP-Source'] = message.inboundProperties.'FSPIOP-Source';]]></expression-component>
        <expression-component doc:name="Set-X-Source-Identifier"><![CDATA[if( message.inboundProperties.'X-Source-Identifier' != null )
	message.outboundProperties['X-Source-Identifier'] = message.inboundProperties.'X-Source-Identifier';]]></expression-component>
        <expression-component doc:name="Set-FSPIOP-Destination"><![CDATA[if( message.inboundProperties.'FSPIOP-Destination' != null )
	message.outboundProperties['FSPIOP-Destination'] = message.inboundProperties.'FSPIOP-Destination';]]></expression-component>
        <expression-component doc:name="Set-X-Destination-Identifier"><![CDATA[if( message.inboundProperties.'X-Destination-Identifier' != null )
	message.outboundProperties['X-Destination-Identifier'] = message.inboundProperties.'X-Destination-Identifier';]]></expression-component>
        <expression-component doc:name="Set-X-Forwarded-For"><![CDATA[if( message.inboundProperties.'X-Forwarded-For' != null )
	message.outboundProperties['X-Forwarded-For'] = message.inboundProperties.'X-Forwarded-For';]]></expression-component>
        <expression-component doc:name="Set-FSPIOP-Encryption"><![CDATA[if( message.inboundProperties.'FSPIOP-Encryption' != null )
	message.outboundProperties['FSPIOP-Encryption'] = message.inboundProperties.'FSPIOP-Encryption';]]></expression-component>
        <expression-component doc:name="Set-FSPIOP-Signature"><![CDATA[if( message.inboundProperties.'FSPIOP-Signature' != null )
	message.outboundProperties['FSPIOP-Signature'] = message.inboundProperties.'FSPIOP-Signature';]]></expression-component>
        <expression-component doc:name="Set-FSPIOP-URI"><![CDATA[if( message.inboundProperties.'FSPIOP-URI' != null )
	message.outboundProperties['FSPIOP-URI'] = message.inboundProperties.'FSPIOP-URI';]]></expression-component>
        <expression-component doc:name="Set-FSPIOP-HTTP-Method"><![CDATA[if( message.inboundProperties.'FSPIOP-HTTP-Method' != null )
	message.outboundProperties['FSPIOP-HTTP-Method'] = message.inboundProperties.'FSPIOP-HTTP-Method';]]></expression-component>
        <logger message="In populate outbound properties subflow. Outbound properties at this stage: #[message.outboundProperties]"
                level="INFO" category="com.l1p.interop.routing.populate-outbound-properties" doc:name="logger"/>
    </sub-flow>

    <apikit:mapping-exception-strategy name="apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException"/>
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>